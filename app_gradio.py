import gradio as gr
from rag_pipeline import qa_chain  # ‡πÇ‡∏´‡∏•‡∏î chain ‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ
import re

# üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏î prompt ‡∏ó‡∏µ‡πà model ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
def clean_model_response(response: str) -> str:
    match = re.search(r"Answer:\s*(.*)", response, re.DOTALL)
    return match.group(1).strip() if match else response.strip()

# üéØ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
def answer_question(query):
    try:
        result = qa_chain.invoke(query)
        raw_answer = result.get("result", "")
        answer = clean_model_response(raw_answer)

        # ‡∏î‡∏∂‡∏á‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (source) ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        sources = "\n".join([doc.metadata.get("source", "Unknown") for doc in result.get("source_documents", [])])
        return answer, sources
    except Exception as e:
        return f"‚ùå Error: {str(e)}", ""

# üåê Gradio UI
with gr.Blocks(title="üìÑ LLaMA 2 PDF Q&A") as demo:
    gr.Markdown("## ü§ñ ‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ PDF ‡∏î‡πâ‡∏ß‡∏¢ LLaMA 2 + LangChain")

    with gr.Row():
        query_input = gr.Textbox(
            label="‚ùì ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÉ‡∏ô‡∏õ‡∏µ 2023 ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?'",
            lines=2,
            show_label=True,
        )
        submit_btn = gr.Button("üì® ‡∏ñ‡∏≤‡∏°‡πÄ‡∏•‡∏¢", scale=0)

    with gr.Row():
        answer_output = gr.Textbox(label="‚úçÔ∏è ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö", lines=5, interactive=False)
        source_output = gr.Textbox(label="üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á", lines=3, interactive=False)

    submit_btn.click(fn=answer_question, inputs=[query_input], outputs=[answer_output, source_output])

# ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Docker ‡∏´‡∏£‡∏∑‡∏≠ VM: server_name="0.0.0.0" ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô IP ‡πÑ‡∏î‡πâ
# demo.launch(server_name="0.0.0.0", server_port=7860, share=False)
demo.launch()
